'''

cdr3Parser.py - Analyse an "aafreq.txt" input file and return all features of CDR3 sequences

Usage:
       python3 cdr3Parser.py <INPUT_FILE>

Copyright:  (c)  2019  Matheus Cardoso   <https://github.com/cardosaum>

License:  Apache 2.0  <https://www.apache.org/licenses/LICENSE-2.0>

'''

# import re
# from Bio.SeqUtils.ProtParam import ProteinAnalysis
# from collections import defaultdict
# from timeit import default_timer as timer

import re
from Bio.SeqUtils.ProtParam import ProteinAnalysis
import collections
import timeit
import os
import csv


def cdr3_parser(file, output_path='same_folder'):
    '''
    This funciton read a 'aafreq.txt' file, generated by ATTILA and return a '.csv' file with statistics about each cdr3 sequence
    '''

    # Set global variables


    # file must already exist
    if not os.path.isfile(file):
        raise EOFError('You need to set an absolute path to the file')
    
    print(os.path.dirname(file) )
    if os.path.dirname(file) == os.getcwd():
        file = os.path.abspath(file)
        # print(os.path.dirname(file))
    if output_path == 'same_folder':
        output_path = os.path.dirname(file)
        output_name, output_extension = os.path.splitext(output_path)
        output_extension = '.csv'


    hashRegex = re.compile(r'(([\d\w]+)(:)(\d+)(:)(\d+)(-)([\d\w]+)(:)(\d)(:)(\d+)(:)(\d+)(:)(\d+)([|])(FRAME:(\d))([|])(\[(\d+)-(\d+)\])([|])(\d+)([|])(\d+)(\.)?(\d+))')
    asterixRegex = re.compile(r'((C)(\w+)(C)(.{2})(\w+)(WG.G))')
    greaterRegex = re.compile(r'((\w+)(:)(\w+)(:)(\d+)(-)(\w+)(:)(\d)(:)(\d+)(:)(\d+)(:)(\d+)([|])(FRAME:(\d+))(\s+)?(\w+)?)')
    seqRegex = re.compile(r'((.+)(C)(.+)(C)(.{2})(.+)(WG.G)(.+)?)')
    countCDR3 = collections.defaultdict(int)

    # print(file, output_path, output_name, output_extension)
    # with open(file) as f, open(output_path, 'w') as o:

cdr3_parser('gal29R0aafreq.txt')
cdr3_parser('VCL29VHR0_S1_L001_R1_001aafreq.csv')

if __name__ == "__main__":
    # TODO: 
    pass